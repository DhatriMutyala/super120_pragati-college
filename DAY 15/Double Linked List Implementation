# Double Linked List Implementation

class Node:
    def __init__(self, data):
        self.prev = None
        self.data = data
        self.next = None


class Linkedlist:
    def __init__(self):
        self.head = None
        self.tail = None

    def insert_begin(self, data):
        newnode = Node(data)
        if self.head is None:
            self.head = newnode
            tail = self.head
        else:
            newnode.next = self.head
            self.head.prev = newnode
            self.head = newnode

    def insert_end(self, data):
        newnode = Node(data)
        if self.head is None:
            self.head = newnode
            self.tail = self.head
        else:
            newnode.prev = self.tail
            self.tail.next = newnode
            self.tail = newnode

    def delete_begin(self):
        if self.head is None:
            print("List is empty. Cannot delete.")
            return
        if self.head.next is None:
            # Only one node in the list
            self.head = None
            self.tail = None
        else:
            self.head = self.head.next
            self.head.prev = None

    def delete_end(self):
        if self.tail is None:
            print("List is empty. Cannot delete.")
            return
        if self.tail.prev is None:
            # Only one node in the list
            self.head = None
            self.tail = None
        else:
            self.tail = self.tail.prev
            self.tail.next = None

    def display_forward(self):
        if self.head is None:
            print("no data")
        cur = self.head
        while cur:
            print(cur.data, end=" -> ")
            cur = cur.next


    def display_reverse(self):
        if self.head is None:
            print("no data")
        cur = self.tail
        while cur:
            print(cur.data, end=" -> ")
            cur = cur.prev



list1 = Linkedlist()
for i in range(1, 10):
    list1.insert_end(i)
list1.display_forward()
list1.delete_end()
list1.delete_end()
list1.delete_end()
print()
list1.display_forward()
print()
list1.display_reverse()










