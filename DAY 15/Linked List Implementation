# Linked List Implementation
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


class Linkedlist:
    def __init__(self):
        self.head = None

    def insert(self, data):
        newnode = Node(data)
        if self.head is None:
            self.head = newnode
            return
        newnode.next = self.head
        self.head = newnode

    def insert_end(self, data):
        newnode = Node(data)
        if self.head is None:
            self.head = newnode
            return
        cur = self.head
        while cur.next:
            cur = cur.next
        cur.next = newnode

    def display(self):
        if self.head is None:
            print("no data")
        cur = self.head
        while cur:
            print(cur.data, end=" -> ")
            cur = cur.next

    def delete_begin(self):
        if self.head is not None:
            self.head = self.head.next

    def delete_end(self):
        if self.head.next is None:
            self.head = None
        else:
            cur = self.head
            while cur.next.next:
                cur = cur.next
            cur.next = None


linkedlist_1 = Linkedlist()
linkedlist_1.insert_end(5)
linkedlist_1.insert_end(9)
linkedlist_1.display()

linkedlist_1.delete_end()
linkedlist_1.display()

linkedlist_1.delete_begin()

linkedlist_1.display()



