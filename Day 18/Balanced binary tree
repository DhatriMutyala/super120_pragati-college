# Balanced binary tree (110 LC)

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        def helper(root):
            if root is None:
                return [0,True]
            l = helper(root.left)
            r = helper(root.right)
            ans = l[1] and r[1] and abs(l[0] - r[0]) <= 1
            return [1 + max(l[0],r[0]) , ans]

        return helper(root)[1]
